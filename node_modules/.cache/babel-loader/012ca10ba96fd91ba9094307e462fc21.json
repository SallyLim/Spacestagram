{"ast":null,"code":"var _jsxFileName = \"/Users/sallylim/Desktop/Projects/spacestagram/src/pages/gallery/phototile.js\",\n    _s = $RefreshSig$();\n\nimport './phototile.css';\nimport React, { useState, useEffect } from \"react\";\nimport Heart from '../../component/heart';\nimport Loading from '../../component/loading';\nimport Description from './description';\nimport PageNumbers from './pageNumbers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PhotoTile(props) {\n  _s();\n\n  const [photo, setPhoto] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const regex = /(jpg)$/;\n  const [pageNum, setPageNum] = useState(1);\n  const [likedFilterButton, setLikedFilterButton] = useState(false);\n  useEffect(() => {\n    if (likedFilterButton) {\n      setPhoto(JSON.parse(localStorage.getItem('heart')));\n      return;\n    }\n\n    setLoading(true);\n    const today = new Date();\n    const start_date = new Date();\n    const end_date = new Date();\n    start_date.setDate(today.getDate() - 15 * (pageNum - 1));\n    end_date.setDate(today.getDate() - 15 * pageNum);\n    let url = \"https://api.nasa.gov/planetary/apod?start_date=\" + end_date.toISOString().split(\"T\")[0] + \"&end_date=\" + start_date.toISOString().split(\"T\")[0] + \"&api_key=yJo04DZWQAhSHxCuIhKu79dvkJee25Kx0J5n43Pw\";\n    fetch(url).then(result => result.json()).then(json => {\n      setLoading(false);\n      setPhoto(json);\n    });\n  }, [pageNum, likedFilterButton]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_button_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter_button ${likedFilterButton ? `filter_button_active` : ``}`,\n        onClick: click => setLikedFilterButton(!likedFilterButton),\n        children: \"Filter by Liked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: photo.filter(photo => regex.test(photo.url)).sort((a, b) => new Date(b.date) - new Date(a.date)).map(single_photo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tile_photos_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"tile_photos\",\n            src: single_photo.url,\n            width: \"350\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tile_header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"tile_title\",\n              children: single_photo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Heart, {\n              photo: single_photo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Description, {\n            text: single_photo.explanation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: single_photo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PageNumbers, {\n      pageNum: pageNum,\n      setPageNum: setPageNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n} //format photo tile part out\n\n_s(PhotoTile, \"t0CAMEL5veAT0E69lisjIMN9vno=\");\n\n_c = PhotoTile;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoTile\");","map":{"version":3,"sources":["/Users/sallylim/Desktop/Projects/spacestagram/src/pages/gallery/phototile.js"],"names":["React","useState","useEffect","Heart","Loading","Description","PageNumbers","PhotoTile","props","photo","setPhoto","loading","setLoading","regex","pageNum","setPageNum","likedFilterButton","setLikedFilterButton","JSON","parse","localStorage","getItem","today","Date","start_date","end_date","setDate","getDate","url","toISOString","split","fetch","then","result","json","click","filter","test","sort","a","b","date","map","single_photo","title","explanation"],"mappings":"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","sourcesContent":["import './phototile.css';\nimport React, { useState, useEffect } from \"react\";\nimport Heart from '../../component/heart';\nimport Loading from '../../component/loading';\nimport Description from './description';\nimport PageNumbers from './pageNumbers';\n\nexport default function PhotoTile(props) {\n    const [photo, setPhoto] = useState([])\n    const [loading, setLoading] = useState(true)\n    const regex = /(jpg)$/\n    const [pageNum, setPageNum] = useState(1)\n    const [likedFilterButton, setLikedFilterButton] = useState(false)\n\n    useEffect(() => {\n        if (likedFilterButton) {\n            setPhoto(JSON.parse(localStorage.getItem('heart')))\n            return\n        }\n        setLoading(true)\n        const today = new Date();\n        const start_date = new Date();\n        const end_date = new Date();\n        start_date.setDate(today.getDate() - 15 * (pageNum - 1));\n        end_date.setDate(today.getDate() - 15 * pageNum);\n        let url = \"https://api.nasa.gov/planetary/apod?start_date=\" +\n            end_date.toISOString().split(\"T\")[0] + \"&end_date=\" +\n            start_date.toISOString().split(\"T\")[0] +\n            \"&api_key=yJo04DZWQAhSHxCuIhKu79dvkJee25Kx0J5n43Pw\"\n\n        fetch(url)\n            .then(result => result.json())\n            .then(json => {\n                setLoading(false)\n                setPhoto(json)\n            });\n    }, [pageNum, likedFilterButton])\n\n    return (\n        <div class=\"page\">\n                <div className=\"filter_button_wrapper\">\n                    <button \n                    className={`filter_button ${likedFilterButton ? `filter_button_active` : ``}`}\n                    onClick={click => setLikedFilterButton(!likedFilterButton)}>\n                    Filter by Liked\n                    </button>\n                </div>\n                {loading ? <Loading /> :\n                <div className=\"flex\">\n                    {photo\n                        .filter(photo => regex.test(photo.url))\n                        .sort((a, b) => \n                            new Date(b.date) - new Date(a.date))\n                        .map(single_photo => (\n                            <div className=\"tile\">\n                                <div className=\"tile_photos_wrapper\">\n                                    <img className=\"tile_photos\" src={single_photo.url} width=\"350\"/>\n                                </div>\n                                <div className=\"text\">\n                                    <div className=\"tile_header\">\n                                        <h2 className=\"tile_title\">{single_photo.title}</h2>\n                                        <Heart photo={single_photo} />\n                                    </div>\n                                    <Description text={single_photo.explanation} />\n                                    <p className=\"date\">{single_photo.date}</p>\n                                </div>\n                            </div>\n                        ))}\n                </div>}\n            <PageNumbers pageNum={pageNum} setPageNum={setPageNum} />\n        </div>\n    )\n\n} //format photo tile part out"]},"metadata":{},"sourceType":"module"}